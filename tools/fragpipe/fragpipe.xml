<tool id="fragpipe" name="Fragpipe" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" python_template_version="3.5">
    <description>(BETA) data analysis for mass spectrometry-based proteomics</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <version_command>fragpipe --help | grep 'FragPipe v'</version_command>
    <command detect_errors="exit_code"><![CDATA[
        @AGREE_TO_LICENSE@
        export XDG_CONFIG_HOME=`pwd` &&
        mkdir -p outputs &&
        @CMD_IMPORTS@
        @LINK_FRAGGER_DATABASE@
        @LINK_SAMPLES@
        @UPDATE_WORKFLOW@
        #if not $workflow_only
	    #if str($database_options) != 'none'
		philosopher workspace --init &&
		philosopher database --custom '${database_name}' --prefix rev_  \
		#if str($database_options) != 'decoy_and_contam'
			--contam \
		#end if
		--contamprefix &&
		mv *-decoys-*.fas decoys-contam-database.fas &&
            #end if
	    msfragger_symlink_path=`msfragger --path` &&
            fragpipe --headless --workflow fp.workflow --manifest fp.manifest --workdir outputs
            --config-msfragger `readlink -f \$msfragger_symlink_path` --config-philosopher `which philosopher` --config-python `which python` --config-ionquant \${CONDA_PREFIX}/tools/IonQuant-1.8.10.jar
            ## mv outputs/<experiment>/psm.tsv to outputs/<experiment>_psm.tsv
            && ls -ltr `find * -type f`
            && cd outputs
            && ln -s log_*.txt log.txt
            &&  for f in psm.tsv ion.tsv peptide.tsv protein.tsv; do n=0; for i in `find * -name \${f}`; do d=\${i%/*}; echo "\${n}  \${d} \${i}"; if [[ \$n == 0 ]]; then awk 'NR==1{printf("Experiment\t%s\n",\$0);}' \$i > all_\${f}; fi; awk 'NR>1{printf("'"\${d}"'\t%s\n",\$0);}' \$i >> all_\${f}; t=`echo \${i} | tr '/' '.'`; mv \${i} \${t}; n=\$((n+1)); done; done 
            &&  ( if [[ -d tmt-report ]]; then for i in `find tmt-report -type f -name '*tsv'`; do cp \${i} \${i/_??.tsv/.tsv}; done; fi )
            && cd ..
            && ls -ltr `find * -type f`
        #else
            ls -ltr `find * -type f`
        #end if
    ]]></command>
    <configfiles>
        <expand macro="workflow_configfile" />
    </configfiles>
    <inputs>
        <!-- -->
        <expand macro="msfragger_license_agreements"/>
        <expand macro="samples"/>
        <expand macro="fragger_database"/>
        <expand macro="workflow"/>
        <param name="workflow_only" type="boolean" truevalue="yes" falsevalue="no" checked="false" label="Only generate the workflow output"/>
    </inputs>
    <outputs>
        <data name="output_manifest" format="txt" label="${tool.name} on ${on_string} manifest" from_work_dir="fp.manifest"/>
        <data name="output_workflow" format="txt" label="${tool.name} on ${on_string} workflow" from_work_dir="fp.workflow"/>
        <data name="log" format="txt" label="${tool.name} on ${on_string} log.txt" from_work_dir="outputs/log.txt">
            <filter>not workflow_only</filter>
        </data>
        <collection name="output_psm" type="list" label="${tool.name} - ${on_string}: psm.tsv" >
            <filter>not workflow_only</filter>
            <discover_datasets pattern="(?P&lt;designation&gt;.+\.psm.tsv)" ext="tabular" directory="outputs"/>
        </collection>
        <!--     
        <collection name="output_ion" type="list" label="${tool.name} - ${on_string}: ion.tsv" >
            <filter>not workflow_only</filter>
            <discover_datasets pattern="(?P&lt;designation&gt;.+\.ion.tsv)" ext="tabular" directory="outputs"/>
        </collection>
        <collection name="output_peptide" type="list" label="${tool.name} - ${on_string}: peptide.tsv" >
            <filter>not workflow_only</filter>
            <discover_datasets pattern="(?P&lt;designation&gt;.+\.peptide.tsv)" ext="tabular" directory="outputs"/>
        </collection>
        <collection name="output_protein" type="list" label="${tool.name} - ${on_string}: protein.tsv" >
            <filter>not workflow_only</filter>
            <discover_datasets pattern="(?P&lt;designation&gt;.+\.protein.tsv)" ext="tabular" directory="outputs"/>
        </collection>
        <collection name="output_delta_mass" type="list" label="${tool.name} - ${on_string}: delta-mass.html" >
            <filter>not workflow_only</filter>
            <discover_datasets pattern="(?P&lt;designation&gt;.+\.delta-mass.html)" ext="html" directory="outputs"/>
        </collection>
        <collection name="output_png" type="list" label="${tool.name} - ${on_string}: interact.png" >
            <filter>not workflow_only</filter>
            <discover_datasets pattern="(?P&lt;designation&gt;.+\.interact_*.png)" ext="png" directory="outputs"/>
        </collection>
        <data name="combined_pep_xml" format="pepxml" label="${tool.name} on ${on_string} combined.pep.xml" from_work_dir="combined.pep.xml">
            <filter>not workflow_only</filter>
        </data>
        <data name="combined_prot_xml" format="protxml" label="${tool.name} on ${on_string} combined.prot.xml" from_work_dir="combined.prot.xml">
            <filter>not workflow_only</filter>
        </data>
        -->
        <data name="all_psm_tsv" format="tabular" label="${tool.name} on ${on_string} all_psm.tsv" from_work_dir="outputs/all_psm.tsv">
            <filter>not workflow_only</filter>
        </data>
        <data name="all_ion_tsv" format="tabular" label="${tool.name} on ${on_string} all_ion.tsv" from_work_dir="outputs/all_ion.tsv">
            <filter>not workflow_only</filter>
        </data>
        <data name="all_peptide_tsv" format="tabular" label="${tool.name} on ${on_string} all_peptide.tsv" from_work_dir="outputs/all_peptide.tsv">
            <filter>not workflow_only</filter>
        </data>
        <data name="all_protein_tsv" format="tabular" label="${tool.name} on ${on_string} all_protein.tsv" from_work_dir="outputs/all_protein.tsv">
            <filter>not workflow_only</filter>
        </data>
        <!--
        <data name="combined_peptide_tsv" format="tabular" label="${tool.name} on ${on_string} combined_peptide.tsv" from_work_dir="combined_peptide.tsv">
            <filter>not workflow_only and scan['scans']['by_sample'] == 'yes' and len(scan['scans']) > 1</filter>
        </data>
        -->
        <data name="combined_protein_tsv" format="tabular" label="${tool.name} on ${on_string} combined_protein.tsv" from_work_dir="outputs/combined_protein.tsv">
            <filter>not workflow_only and scan['scans']['by_sample'] == 'yes' and len(scan['scans']) > 1</filter>
        </data>
	<data name="global_profile_tsv" format="tabular" label="${tool.name} on ${on_string} global.profile.tsv" from_work_dir="outputs/global.profile.tsv">
            <filter>not workflow_only and ('glyco' in wf['workflow_name'] or 'Open' in  wf['workflow_name'] or 'Mass' in  wf['workflow_name'])</filter>
	</data>
	<data name="global_summary_tsv" format="tabular" label="${tool.name} on ${on_string} global.modsummary.tsv" from_work_dir="outputs/global.modsummary.tsv">
            <filter>not workflow_only and ('glyco' in wf['workflow_name'] or 'Open' in  wf['workflow_name'] or 'Mass' in  wf['workflow_name'])</filter>
	</data>
        <data name="tmt_abundance_protein_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_protein.tsv" from_work_dir="outputs/tmt-report/abundance_protein.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_protein_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_protein.tsv" from_work_dir="outputs/tmt-report/ratio_protein.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_abundance_peptide_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_peptide.tsv" from_work_dir="outputs/tmt-report/abundance_peptide.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_peptide_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_peptide.tsv" from_work_dir="outputs/tmt-report/ratio_peptide.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_abundance_gene_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_gene.tsv" from_work_dir="outputs/tmt-report/abundance_gene.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_gene_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_gene.tsv" from_work_dir="outputs/tmt-report/ratio_gene.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_abundance_single_site_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_single-site.tsv" from_work_dir="outputs/tmt-report/abundance_single-site.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_single_site_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_single-site.tsv" from_work_dir="outputs/tmt-report/ratio_single-site.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_abundance_multi_site_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_multi-site.tsv" from_work_dir="outputs/tmt-report/abundance_multi-site.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_multi_site_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_multi-site.tsv" from_work_dir="outputs/tmt-report/ratio_multi-site.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_abundance_protein_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_protein_MD.tsv" from_work_dir="outputs/tmt-report/abundance_protein_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_protein_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_protein_MD.tsv" from_work_dir="outputs/tmt-report/ratio_protein_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_abundance_peptide_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_peptide_MD.tsv" from_work_dir="outputs/tmt-report/abundance_peptide_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_peptide_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_peptide_MD.tsv" from_work_dir="outputs/tmt-report/ratio_peptide_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_abundance_gene_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_gene_MD.tsv" from_work_dir="outputs/tmt-report/abundance_gene_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_gene_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_gene_MD.tsv" from_work_dir="outputs/tmt-report/ratio_gene_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_abundance_single_site_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_single-site_MD.tsv" from_work_dir="outputs/tmt-report/abundance_single-site_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_single_site_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_single-site_MD.tsv" from_work_dir="outputs/tmt-report/ratio_single-site_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_abundance_multi_site_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report abundance_multi-site_MD.tsv" from_work_dir="outputs/tmt-report/abundance_multi-site_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
        <data name="tmt_ratio_multi_site_MD_tsv" format="tabular" label="${tool.name} on ${on_string} tmt-report ratio_multi-site_MD.tsv" from_work_dir="outputs/tmt-report/ratio_multi-site_MD.tsv">
            <filter>not workflow_only and ('TMT' in wf['workflow_name'] or 'TRAQ' in  wf['workflow_name'] or 'SLC' in  wf['workflow_name'])</filter>
        </data>
<!--
combined_ion.tsv (from Philosopher, overwritted by IonQuant)
combined_modified_peptide.tsv (from IonQuant)
combined_peptide.tsv (from Philosopher, overwritted by IonQuant)
combined_protein.tsv (from Philosopher, overwritted by IonQuant)
global.profile.tsv (from PTM-Shepherd)
global.modsummary.tsv (from PTM-Shepherd)
filename_quant.csv (from IonQuant)

outputs/all_psm.tsv
outputs/all_ion.tsv
outputs/all_peptide.tsv
outputs/all_protein.tsv

outputs/tmt-report:
total 32656
ratio_gene_MD.tsv
abundance_gene_MD.tsv
ratio_protein_MD.tsv
abundance_protein_MD.tsv
ratio_peptide_MD.tsv
abundance_peptide_MD.tsv
ratio_multi-site_MD.tsv
abundance_multi-site_MD.tsv
ratio_single-site_MD.tsv
abundance_single-site_MD.tsv
-->
    </outputs>

    <help><![CDATA[
**FragPipe**

FragPipe_ is a suite of computational tools enabling comprehensive analysis of mass spectrometry-based proteomics data. 
FragPipe uses MSFragger_ - an ultrafast proteomic search engine suitable for both conventional and “open” (wide precursor mass tolerance) peptide identification. 

FragPipe_ runs a user selected analysis workflow_ 

**License Agreements**

    @MSFRAGGER_LICENSE_AGREEMENTS@



.. _FragPipe: https://fragpipe.nesvilab.org
.. _MSFragger: https://msfragger.nesvilab.org
.. _workflow: https://fragpipe.nesvilab.org/docs/tutorial_fragpipe_workflows.html

    ]]></help>
    <expand macro="citations" />
</tool>
